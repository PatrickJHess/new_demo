Search.setIndex({"alltitles": {"$^{6} For introduction to the datetime module see <a href='https://colab.research.google.com/drive/1ebkxsEmh7S0LgH3HUjF6vwy59sxbRcIk?usp=drive_link'>Manipulating Dates</a>.": [[0, "for-introduction-to-the-datetime-module-see-manipulating-dates"]], "<font color='green'>average_bedrooms()</font> is applied to each longitude (row) of the DataFrame <font color='green'>df_excel_new</font>. Using the anonymous lambda function allows the assignment of values in each row as arguments of the function.^{5}": [[0, "average-bedrooms-is-applied-to-each-longitude-row-of-the-dataframe-df-excel-new-using-the-anonymous-lambda-function-allows-the-assignment-of-values-in-each-row-as-arguments-of-the-function-5"]], "<font color='green'>df_bare_bones</font> is a table, but it\u2019s not very useful.  The first improvement is to provide labels for the<br> columns and the rows.  Both are attributes of <font color='green'>df_bare_bones</font> and the values have been<br> assigned by Pandas.  The column attribute is referred to as <font color='green'>columns</font> and the row attribute<br> as <font color='green'>index</font>. As with all objects, these attributes can be accessed using a dot after the<br> object\u2019s name. In this case, the <font color='green'>columns</font> attribute is assigned the list <font color='green'>[\u2018First\u2019, \u2018Second\u2019, \u2018Third\u2019]</font>,<br> and the <font color='green'>rows</font> attribute is assigned the list <font color='green'>[\u2018x\u2019, \u2018y\u2019]</font>.": [[0, "df-bare-bones-is-a-table-but-it-s-not-very-useful-the-first-improvement-is-to-provide-labels-for-the-columns-and-the-rows-both-are-attributes-of-df-bare-bones-and-the-values-have-been-assigned-by-pandas-the-column-attribute-is-referred-to-as-columns-and-the-row-attribute-as-index-as-with-all-objects-these-attributes-can-be-accessed-using-a-dot-after-the-object-s-name-in-this-case-the-columns-attribute-is-assigned-the-list-first-second-third-and-the-rows-attribute-is-assigned-the-list-x-y"]], "A Bare Bones DataFrame": [[0, "a-bare-bones-dataframe"]], "A DataFrame, reminiscent of a spreadsheet, is the primary object in Pandas. Data is organized into tables with columns and rows, that can be manipulated similar to a spreadsheet. Depending on your notebook, you may need to install Pandas before importing it.": [[0, "a-dataframe-reminiscent-of-a-spreadsheet-is-the-primary-object-in-pandas-data-is-organized-into-tables-with-columns-and-rows-that-can-be-manipulated-similar-to-a-spreadsheet-depending-on-your-notebook-you-may-need-to-install-pandas-before-importing-it"]], "A row of A DataFrame is identified with the <font color='green'>loc</font> or <font color='green'>iloc</font> attribute.  The <font color='green'>loc</font> attribute uses<br> the value of the <font color='green'>index</font>; in our example \u2018x\u2019 or \u2018y\u2019.  The <font color='green'>iloc</font> attribute uses the location of the row<br> in the <font color='green'>index</font>; in our example, 0 or 1.": [[0, "a-row-of-a-dataframe-is-identified-with-the-loc-or-iloc-attribute-the-loc-attribute-uses-the-value-of-the-index-in-our-example-x-or-y-the-iloc-attribute-uses-the-location-of-the-row-in-the-index-in-our-example-0-or-1"]], "Add A Column": [[0, "add-a-column"]], "Adding Labels For Columns And Rows": [[0, "adding-labels-for-columns-and-rows"]], "An example cell": [[3, "an-example-cell"]], "Assign A List To The New Column \u2018Values of z\u2019": [[0, "assign-a-list-to-the-new-column-values-of-z"]], "Assign Three Plus The Column \u2018Values of y\u2019 To The New Column \u2018Values of z\u2019": [[0, "assign-three-plus-the-column-values-of-y-to-the-new-column-values-of-z"]], "Because the <font color='green'>DataFrame()</font> method interprets the dictionary keys as column names, <font color='green'>df_dict</font><br> is the transpose of <font color='green'>df_bare_bones</font>.  To that end, the index of <font color='green'>df_dict</font> is assigned the <font color='green'>columns</font><br> list that was assigned as the <font color='green'>columns</font> of <font color='green'>df_bare_bones</font>.  The Pandas method <font color='green'>transpose()</font><br> transposes a DataFrame but does not replace the values.  To keep the transposed <font color='green'>DataFrame</font><br> it must be assigned to another variable. The <font color='green'>transpose</font> method may also be accessed with a capital <font color='green'>T</font>.": [[0, "because-the-dataframe-method-interprets-the-dictionary-keys-as-column-names-df-dict-is-the-transpose-of-df-bare-bones-to-that-end-the-index-of-df-dict-is-assigned-the-columns-list-that-was-assigned-as-the-columns-of-df-bare-bones-the-pandas-method-transpose-transposes-a-dataframe-but-does-not-replace-the-values-to-keep-the-transposed-dataframe-it-must-be-assigned-to-another-variable-the-transpose-method-may-also-be-accessed-with-a-capital-t"]], "Citations": [[2, "citations"]], "Code blocks and outputs": [[4, "code-blocks-and-outputs"]], "Colab notebooks contain sample data within the \u2018sample_data\u2019 folder. In this instance,<br> the data from the csv file \u2018california_housing_train.csv\u2019 is transformed into a DataFrame<br> using the Pandas <font color='green'>read_csv()</font> method. The sole necessary argument for this method is<br> the file path from DropBox.": [[0, "colab-notebooks-contain-sample-data-within-the-sample-data-folder-in-this-instance-the-data-from-the-csv-file-california-housing-train-csv-is-transformed-into-a-dataframe-using-the-pandas-read-csv-method-the-sole-necessary-argument-for-this-method-is-the-file-path-from-dropbox"]], "Content with notebooks": [[4, null]], "Create A DataFrame From A Dictionary": [[0, "create-a-dataframe-from-a-dictionary"]], "Create a notebook with MyST Markdown": [[3, "create-a-notebook-with-myst-markdown"]], "Creating A DataFrame With A CSV File": [[0, "creating-a-dataframe-with-a-csv-file"]], "Creating An Excel File From A DataFrame And Back To A DataFrame": [[0, "creating-an-excel-file-from-a-dataframe-and-back-to-a-dataframe"]], "Creating Or Instantiating A DataFrame": [[0, "creating-or-instantiating-a-dataframe"]], "DataFrames, CSV, And Excel Files": [[0, "dataframes-csv-and-excel-files"]], "Displays the longitude amd the latitude of the first five rows as a list of tuples.  The index is assigned to longitude and latitudge to the \u2018latitude\u2019 column of <font color='green'>df_excel_new_index</font>.  The list <font color='green'>longitude_latitude</font> is created with list comprehension of the two values.": [[0, "displays-the-longitude-amd-the-latitude-of-the-first-five-rows-as-a-list-of-tuples-the-index-is-assigned-to-longitude-and-latitudge-to-the-latitude-column-of-df-excel-new-index-the-list-longitude-latitude-is-created-with-list-comprehension-of-the-two-values"]], "Duplicated rows of a DataFrame or values of a Series can be determined with the <font color='green'>duplicated()</font> method.  By default the first occurence of a duplicated value is marked as False and all others are marked as True.  Here the method is applied to the index of the first ten rows of <font color='green'>df_excel_new_index</font>.": [[0, "duplicated-rows-of-a-dataframe-or-values-of-a-series-can-be-determined-with-the-duplicated-method-by-default-the-first-occurence-of-a-duplicated-value-is-marked-as-false-and-all-others-are-marked-as-true-here-the-method-is-applied-to-the-index-of-the-first-ten-rows-of-df-excel-new-index"]], "Fixing The Row With <font color='green'>loc</font> And Iterating Through The Columns.": [[0, "fixing-the-row-with-loc-and-iterating-through-the-columns"]], "Here the values assigned to the <font color='green'>columns</font> and <font color='green'>index</font> attributes are arguments of the method.<br>  Because the attributes are not variables of the notebook, the names assigned may be the<br> same as the attributes.": [[0, "here-the-values-assigned-to-the-columns-and-index-attributes-are-arguments-of-the-method-because-the-attributes-are-not-variables-of-the-notebook-the-names-assigned-may-be-the-same-as-the-attributes"]], "If you want to only keep unique values, it makes sense to negate the values returned from <font color='green'>duplicated()</font>.": [[0, "if-you-want-to-only-keep-unique-values-it-makes-sense-to-negate-the-values-returned-from-duplicated"]], "In the next code cell the values of \u2018First\u2019 column are printed by iterating through the index with loc.": [[0, "in-the-next-code-cell-the-values-of-first-column-are-printed-by-iterating-through-the-index-with-loc"]], "In this example, the <font color='green'>apply()</font> method has the same effects as direct operation on the columns.": [[0, "in-this-example-the-apply-method-has-the-same-effects-as-direct-operation-on-the-columns"]], "Including The Labels As Arguments Of DataFrame()": [[0, "including-the-labels-as-arguments-of-dataframe"]], "Iterating Through The Columns And Index": [[0, "iterating-through-the-columns-and-index"]], "It\u2019s convenient to create a DataFrame from a dictionary.  Dictionaries are key-value pairs.^{4}<br> The keys are interpreted as column names, and the values are the data assigned to those columns.<br> In this example, the \u2018Value Of X\u2019 and \u2018Value Of Y\u2019 columns are assigned the lists <font color='green'>x</font> and <font color='green'>y</font>, respectively.": [[0, "it-s-convenient-to-create-a-dataframe-from-a-dictionary-dictionaries-are-key-value-pairs-4-the-keys-are-interpreted-as-column-names-and-the-values-are-the-data-assigned-to-those-columns-in-this-example-the-value-of-x-and-value-of-y-columns-are-assigned-the-lists-x-and-y-respectively"]], "Learn more": [[2, "learn-more"]], "Locate A Row With An Index Value": [[0, "locate-a-row-with-an-index-value"]], "Making A Column The Index": [[0, "making-a-column-the-index"]], "Markdown + notebooks": [[4, "markdown-notebooks"]], "Markdown Files": [[2, null]], "MyST markdown": [[4, "myst-markdown"]], "Negate A Pandas Value With ~": [[0, "negate-a-pandas-value-with"]], "Notebooks with MyST Markdown": [[3, null]], "Pandas": [[0, null]], "Pandas To Numpy": [[0, "pandas-to-numpy"]], "Pandas To Timestamp() Method": [[0, "pandas-to-timestamp-method"]], "Pandas duplicated() Method": [[0, "pandas-duplicated-method"]], "Quickly add YAML metadata for MyST Notebooks": [[3, "quickly-add-yaml-metadata-for-myst-notebooks"]], "Sample Roles and Directives": [[2, "sample-roles-and-directives"]], "The <font color='green'>apply()</font> function in Pandas is a versatile method used to apply a function along an axis of a DataFrame or to the values of a Series. It enables element-wise, row-wise, or column-wise operations using custom or built-in functions avoiding iterating through rows or columns.": [[0, "the-apply-function-in-pandas-is-a-versatile-method-used-to-apply-a-function-along-an-axis-of-a-dataframe-or-to-the-values-of-a-series-it-enables-element-wise-row-wise-or-column-wise-operations-using-custom-or-built-in-functions-avoiding-iterating-through-rows-or-columns"]], "The <font color='green'>average_bedrooms()</font> function calculates the average number of bedrooms from the total number of bedrooms and households.": [[0, "the-average-bedrooms-function-calculates-the-average-number-of-bedrooms-from-the-total-number-of-bedrooms-and-households"]], "The <font color='green'>get_indexer()</font> method locates the row number of the <font color='green'>index</font> from a value.  If the label is not present, minus one is returned. The value must be an iterable.  Here it is a list.": [[0, "the-get-indexer-method-locates-the-row-number-of-the-index-from-a-value-if-the-label-is-not-present-minus-one-is-returned-the-value-must-be-an-iterable-here-it-is-a-list"]], "The <font color='green'>iloc</font> example uses the <font color='green'>index</font> values of 0 and 1 to print the value of \u2018Second\u2019 column.<br>  The <font color='green'>iloc</font> attribute requires the <font color='green'>enumerate</font> function of Python that keeps track of the number<br> of iterations.^{3}  The row is then fixed with <font color='green'>loc</font> and the columns are iterated through to show all<br> the values of the list <font color='green'>x</font>.": [[0, "the-iloc-example-uses-the-index-values-of-0-and-1-to-print-the-value-of-second-column-the-iloc-attribute-requires-the-enumerate-function-of-python-that-keeps-track-of-the-number-of-iterations-3-the-row-is-then-fixed-with-loc-and-the-columns-are-iterated-through-to-show-all-the-values-of-the-list-x"]], "The <font color='green'>iterrows()</font> method of Pandas iterates over the rows of a DataFrame and returns a tuple of the row\u2019s values.  The example:": [[0, "the-iterrows-method-of-pandas-iterates-over-the-rows-of-a-dataframe-and-returns-a-tuple-of-the-row-s-values-the-example"]], "The <font color='green'>set_index()</font> method makes a column an index. One of the arguments of the method<br> is <font color='green'>inplace</font> that defaults to False.  If assigned True, the DataFrame is permanently changed.<br>  Here it is assigned to a new DataFrame.": [[0, "the-set-index-method-makes-a-column-an-index-one-of-the-arguments-of-the-method-is-inplace-that-defaults-to-false-if-assigned-true-the-dataframe-is-permanently-changed-here-it-is-assigned-to-a-new-dataframe"]], "The <font color='green'>to_excel()</font> method converts a DataFrame into an Excel file. This example uses the<br> required argument file path, and specifies the file name as <font color='green'>sample.xlsx</font>. The file will be<br> located in the notebook\u2019s root directory \u2018/contents.\u2019 Additionally, the optional arguments<br> <font color='green'>sheet_name</font> and <font color='green'>index</font> are used. The <font color='green'>sheet_name</font> is assigned \u2018First Sheet,\u2019 and the <font color='green'>index</font><br> is set to False, preventing the <font color='green'>df_csv</font> index from being included in \u2018First Sheet.\u2019 The resulting<br> Excel file is then converted back into a DataFrame (<font color='green'>df_excel</font>), and the first ten rows are<br> displayed by slicing without using <font color='green'>iloc</font>.  The results are identical to <font color='green'>df_csv</font>.": [[0, "the-to-excel-method-converts-a-dataframe-into-an-excel-file-this-example-uses-the-required-argument-file-path-and-specifies-the-file-name-as-sample-xlsx-the-file-will-be-located-in-the-notebook-s-root-directory-contents-additionally-the-optional-arguments-sheet-name-and-index-are-used-the-sheet-name-is-assigned-first-sheet-and-the-index-is-set-to-false-preventing-the-df-csv-index-from-being-included-in-first-sheet-the-resulting-excel-file-is-then-converted-back-into-a-dataframe-df-excel-and-the-first-ten-rows-are-displayed-by-slicing-without-using-iloc-the-results-are-identical-to-df-csv"]], "The Pandas <font color='green'>Timestamp()</font> is the Pandas equivalent of <font color='green'>datetime</font> and includes some useful attributes.  The example converts a <font color='green'>datetime</font> to a <font color='green'>Timestamp</font> and printing both values and several attributes of Pandas <font color='green'>Timestamp()</font>.^{6}": [[0, "the-pandas-timestamp-is-the-pandas-equivalent-of-datetime-and-includes-some-useful-attributes-the-example-converts-a-datetime-to-a-timestamp-and-printing-both-values-and-several-attributes-of-pandas-timestamp-6"]], "The Transpose": [[0, "the-transpose"]], "The apply() Method": [[0, "the-apply-method"]], "The example code cell below uses a <font color='green'>try</font> and <font color='green'>except</font> code block to import Pandas and assigns<br> it the common alias <font color='green'>pd</font>.^{1}": [[0, "the-example-code-cell-below-uses-a-try-and-except-code-block-to-import-pandas-and-assigns-it-the-common-alias-pd-1"]], "The file is then assigned to <font color='green'>df_csv</font>, and the initial ten rows are displayed by slicing the <font color='green'>index</font><br> using the <font color='green'>iloc</font> attribute.": [[0, "id1"]], "The file is then assigned to <font color='green'>df_csv</font>, and the initial ten rows are displayed by slicing the <font color='green'>index</font><br> using the <font color='green'>iloc</font> attribute..": [[0, "the-file-is-then-assigned-to-df-csv-and-the-initial-ten-rows-are-displayed-by-slicing-the-index-using-the-iloc-attribute"]], "The first Pandas method demonstrated is <font color='green'>DataFrame()</font>.  The required arguments of the method are<br> the data that must be an iterable: e.g. a list or a dictionary.^{2}  Here the DataFrame <font color='green'>df_bare_bones</font> is <br>created with two simple lists: <font color='green'>x</font> and <font color='green'>y</font>.": [[0, "the-first-pandas-method-demonstrated-is-dataframe-the-required-arguments-of-the-method-are-the-data-that-must-be-an-iterable-e-g-a-list-or-a-dictionary-2-here-the-dataframe-df-bare-bones-is-created-with-two-simple-lists-x-and-y"]], "The iterrows() Method": [[0, "the-iterrows-method"]], "The loc and iloc Attributes": [[0, "the-loc-and-iloc-attributes"]], "The method <font color='green'>to_numpy()</font> converts a DataFrame to a NumPy array. All values of the DataFrame are converted to a single type.  Unlike DataFrames, NumPy arrays are not indexed. The value for the -114.56 latitude is accessed with the <font color='green'>iloc</font> attribute.": [[0, "the-method-to-numpy-converts-a-dataframe-to-a-numpy-array-all-values-of-the-dataframe-are-converted-to-a-single-type-unlike-dataframes-numpy-arrays-are-not-indexed-the-value-for-the-114-56-latitude-is-accessed-with-the-iloc-attribute"]], "The values of rows and columns can be accessed by iterating through a DataFrame\u2019s <font color='green'>columns</font><br> or <font color='green'>index</font>.  Here the values of the labels of <font color='green'>columns</font> and <font color='green'>index</font> are printed.": [[0, "the-values-of-rows-and-columns-can-be-accessed-by-iterating-through-a-dataframe-s-columns-or-index-here-the-values-of-the-labels-of-columns-and-index-are-printed"]], "Transpose With Method <font color='green'>transpose()</font>, <font color='green'>T</font> For Shorthand.": [[0, "transpose-with-method-transpose-t-for-shorthand"]], "Welcome to your Jupyter Book": [[1, null]], "What is MyST?": [[2, "what-is-myst"]], "^{1.} If you need a little help with this concept check out the notebooks Lists or Dictionaires": [[0, "if-you-need-a-little-help-with-this-concept-check-out-the-notebooks-lists-or-dictionaires"]], "^{1} An introduction to <font color='green'>try</font> and <font color='green'>except</font> code blocks <a href='https://colab.research.google.com/drive/1_U6FtHZjbjMtBRYrULipP2jnwKis4qgM?usp=sharing'>The Notebook Control Statements In The Library</a>": [[0, "an-introduction-to-try-and-except-code-blocks-the-notebook-control-statements-in-the-library"]], "^{3.} Gemini provides a nice explanation of the <font color='green'>enumerate</font> function.": [[0, "gemini-provides-a-nice-explanation-of-the-enumerate-function"]], "^{4} For an introduction to dictionaries see <a href='https://colab.research.google.com/drive/1xGcImigTwgiAlYBHdHG44KH3i3IS6Prr?usp=sharing'>Dictionaries Notebook</a>.": [[0, "for-an-introduction-to-dictionaries-see-dictionaries-notebook"]], "^{5} For a discussion of lambda functions see <a href='https://colab.research.google.com/drive/125oeGZS-dlF4namW00LLREKElsr9dxsb?usp=drive_link'> Functions</a>.": [[0, "for-a-discussion-of-lambda-functions-see-functions"]], "iloc Attribute": [[0, "iloc-attribute"]], "loc Attribute": [[0, "loc-attribute"]]}, "docnames": ["An_Introduction_To_Pandas", "intro", "markdown", "markdown-notebooks", "notebooks"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["An_Introduction_To_Pandas.ipynb", "intro.md", "markdown.md", "markdown-notebooks.md", "notebooks.ipynb"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [2, 3, 4], "0": 4, "00": 0, "01": 0, "0147": 0, "01oy0yej": 0, "02": 0, "0313": 0, "04": 0, "067751": 0, "0x7f3f046ff670": 4, "1": 4, "10": [0, 4], "100": 4, "1015": 0, "103600": 0, "1056": 0, "105832": 0, "1068": 0, "1069": 0, "1070": 0, "1071": 0, "1072": 0, "111111": 0, "111400": 0, "1129": 0, "117": 0, "1175": 0, "1189": 0, "1190": 0, "1191": 0, "1192": 0, "1193": 0, "1194": 0, "124": 0, "1244": 0, "1283": 0, "1298": 0, "135484": 0, "1387": 0, "14": 0, "1454": 0, "1497": 0, "15": 0, "1501": 0, "154812": 0, "158": 0, "164474": 0, "168": 0, "17": 0, "17000": 0, "1700e": 0, "174": 0, "1782": 0, "1820": 0, "1841": 0, "19": 0, "1901": 0, "1908": 0, "1917": 0, "19680801": 4, "2": 3, "20": 0, "2000e": 0, "2014": [], "2025": 0, "21": 0, "2217": 0, "226": 0, "2349": 0, "236": 0, "239": 0, "244275": 0, "25": 0, "26": 0, "262": 0, "2672": 0, "2677": 0, "27": 0, "270": 0, "271": 0, "29": 0, "2907": 0, "30": 0, "300": 0, "309": 0, "31": 0, "310": 0, "311": 0, "312": 0, "313": 0, "3134": 0, "326": 0, "33": 0, "3300e": 0, "333": 0, "337": 0, "34": 0, "3438": 0, "35": 0, "3571": 0, "3575374214": 0, "36": 0, "362": 0, "363": 0, "364": 0, "365": 0, "366": 0, "369": 0, "3690e": 0, "375": 0, "394": 0, "4": [3, 4], "40": 0, "41": 0, "456": 0, "46": 0, "463": 0, "465": 0, "47": 0, "472": 0, "478": 0, "4789": 0, "48100": 0, "48500": 0, "487179": 0, "491150": 0, "4936": 0, "5": 4, "515": 0, "5179": 0, "52": 0, "528": 0, "531": 0, "54": 0, "552": 0, "5612": 0, "57": 0, "5700e": 0, "58": 0, "58400": 0, "59": 0, "60": 0, "61": 0, "624": 0, "63": 0, "633": 0, "64": 0, "6509": 0, "6509e": 0, "65500": 0, "66900": 0, "671": 0, "6768": 0, "680": 0, "69": 0, "7": 0, "7000e": 0, "7083": 0, "709": 0, "710": 0, "711": 0, "712": 0, "713": 0, "718220": 0, "720": 0, "73400": 0, "74000": 0, "7400e": 0, "7650": 0, "787": 0, "79000": 0, "8": 0, "80": 0, "80100": 0, "806": 0, "812": 0, "8200": 0, "82400": 0, "83": 0, "84": 0, "85700": 0, "85800": 0, "8foebx6137zspvq5d5rqd9f2f": 0, "8vr4pq42p99zxu5lc9qe6": 0, "9": 0, "907": 0, "9250": 0, "94600": 0, "9797": 0, "As": 4, "But": 4, "For": [2, 4], "If": 3, "In": [], "It": [1, 2], "No": 0, "That": 3, "The": [2, 3], "There": 4, "With": 3, "__init__": 0, "_base": 0, "_decor": 0, "_ioncontext": 4, "about": [2, 3, 4], "accept": 2, "add_": 4, "align": 4, "all": [2, 3], "allow": 2, "also": [2, 3, 4], "an": 2, "anaconda3": 0, "ani": [1, 3], "append": 0, "ar": [2, 3], "arg": 0, "arrai": 4, "auditori": [], "australia": [], "avg_bedroom": 0, "ax": 4, "base": 3, "begin": 4, "being": 2, "bib": 2, "bibliographi": 2, "bibtex": 2, "binari": 0, "block": 3, "book": [2, 3, 4], "both": 2, "box": 2, "brian": [], "brisban": [], "build": 2, "built": 3, "bundl": 1, "bytesio": 0, "call": [0, 2], "can": [2, 3, 4], "check": [1, 4], "christoph": [], "cite": 2, "cm": 4, "cmap": 4, "code": 3, "cognit": [], "cold": 4, "color": 4, "command": 3, "comment": 0, "commonmark": 2, "compress": 0, "confer": [], "content": [1, 2, 3], "content_or_path": 0, "convert": 3, "convert_float": 0, "coolwarm": 4, "cortex": [], "creat": 4, "custom_lin": 4, "cycler": 4, "d": 3, "data": 4, "date_pars": 0, "date_tim": 0, "day_of_week": 0, "de": [], "def": 0, "default": 3, "defin": 3, "depend": 2, "depth": 1, "detail": 3, "df_exce_new_index": 0, "df_transpos": 0, "differ": 2, "direct": 3, "displai": 3, "dl": 0, "do": [2, 4], "document": [1, 2, 3, 4], "doe": 1, "dollar": 4, "dtype": 0, "ecosystem": 2, "elif": 0, "els": 0, "emb": 4, "encod": 0, "end": 4, "engin": 0, "errno": 0, "error": 0, "escap": 4, "etc": 4, "evid": [], "exampl": [2, 4], "excel_numpi": 0, "excelfil": 0, "execut": 3, "ext": 0, "extens": 2, "false_valu": 0, "feel": 1, "few": 1, "fi": 0, "fig": 4, "figsiz": 4, "file": [1, 3], "filenotfounderror": 0, "first_occur": 0, "fix": 4, "flavor": 2, "float64": 0, "follow": [2, 3], "from": 4, "frontier": [], "full": 0, "func": 0, "function": 2, "get": [2, 3], "get_handl": 0, "get_loc": 0, "give": 1, "go": 1, "guid": 4, "hand": 0, "handl": 0, "have": 3, "hdhpk14": [], "header": 0, "heer": [], "help": 2, "here": [2, 4], "holdgraf": [], "holdgraf_evidence_2014": 2, "hot": 4, "housing_median_ag": 0, "how": [1, 3], "html": 4, "human": [], "i": [1, 3, 4], "ii": 4, "imag": 4, "import": 4, "includ": [3, 4], "index_col": 0, "index_valu": 0, "indic": 0, "inform": [1, 3, 4], "init": 3, "inlin": 2, "input": 2, "insert": 2, "inspect_excel_format": 0, "instruct": 3, "int64": 0, "interact": 4, "intern": [], "io": 0, "ioarg": 0, "ion": 4, "ipykernel_17325": 0, "ipynb": 2, "is_month_end": 0, "is_text": 0, "isinst": 0, "jupyt": [2, 3, 4], "jupyterbook": 2, "jupytext": 3, "just": 2, "keep": 4, "keep_default_na": 0, "kernel": 3, "kind": 2, "knight": [], "kwarg": 0, "la_": 4, "languag": 2, "last": 0, "legend": 4, "let": 3, "lib": 0, "like": [2, 3], "line": [2, 3, 4], "line2d": 4, "linspac": 4, "ll": 2, "logspac": 4, "lot": [2, 4], "lw": 4, "major": 1, "make": 4, "mangle_dupe_col": 0, "mani": [2, 3], "markdown": 1, "markdownfil": 3, "markedli": 2, "markup": 2, "math": 4, "matplotlib": 4, "mbox": 4, "md": [2, 3], "mean": 4, "median_house_valu": 0, "median_incom": 0, "medium": 4, "memory_map": 0, "mode": 0, "more": [1, 3, 4], "moreov": 2, "most": [0, 2], "must": 2, "myst": 1, "n": 4, "na_filt": 0, "na_valu": 0, "need": 3, "neurosci": [], "note": 2, "notebook": [1, 2], "np": [0, 4], "nrow": 0, "numpi": 4, "off": [1, 2, 3], "one": 2, "open": 0, "org": 2, "other": 3, "out": [1, 4], "output": 3, "overview": 2, "packag": 0, "page": [1, 2, 3], "panda": 1, "pandas_time_stamp": 0, "parse_d": 0, "particular": 1, "paslei": [], "path": 3, "path_or_buf": 0, "path_or_buff": 0, "pip": 0, "plot": 4, "plt": 4, "popul": 0, "post": 4, "power": 2, "predict": [], "presenc": 3, "print": 3, "prop_cycl": 4, "properli": 2, "purpos": 2, "py": 0, "pyplot": 4, "python3": 0, "rais": 0, "ramsai": [], "randn": 4, "random": 4, "rang": 4, "rb": 0, "rcparam": 4, "read_excel": 0, "recent": 0, "refer": 2, "regular": 2, "render": 2, "reproduc": 4, "rest": 3, "rlkei": 0, "robert": [], "run": 3, "same": 2, "sampl": [1, 4], "scl": 0, "see": [1, 2, 3, 4], "seed": 4, "self": 0, "serv": 2, "short": 0, "should": 3, "should_clos": 0, "show": [1, 2, 3], "sign": 4, "similar": 2, "simpl": 2, "site": 0, "skipfoot": 0, "skiprow": 0, "slight": 2, "small": [1, 2], "so": 3, "some": [1, 2, 4], "span": 2, "special": 2, "specif": 2, "sphinx": 2, "squeez": 0, "st": 0, "stacklevel": 0, "stand": 2, "start": [2, 3], "starter": 2, "state": 4, "storage_opt": 0, "store": 2, "structur": [1, 2], "subplot": 4, "support": 3, "sure": 4, "syntax": 2, "t": 4, "tex": 4, "text": [2, 3], "thei": 2, "thi": [1, 2, 3, 4], "thing": 3, "those": 2, "thousand": 0, "tmp": 0, "tool": 2, "top": 3, "topic": 1, "total_bedroom": 0, "total_num_bedroom": 0, "total_num_household": 0, "total_room": 0, "traceback": 0, "treat": 3, "true_valu": 0, "two": [2, 3], "type": 1, "understand": 3, "url": 0, "us": [2, 3], "usecol": 0, "util": 0, "valueerror": 0, "variat": 2, "verbos": 0, "want": 4, "well": [1, 4], "wendi": [], "when": [2, 3], "wherea": 2, "whether": 2, "which": 3, "work": 4, "wrapper": 0, "write": [2, 3], "written": [2, 3], "www": 0, "xl": 0, "you": [1, 2, 3, 4], "your": [2, 3, 4]}, "titles": ["<em><strong>Pandas</strong></em>", "Welcome to your Jupyter Book", "Markdown Files", "Notebooks with MyST Markdown", "Content with notebooks"], "titleterms": {"": 0, "0": 0, "1": 0, "114": 0, "125oegz": 0, "1_u6fthzjbjmtbryrulipp2jnwkis4qgm": 0, "1ebkxsemh7s0lgh3hujf6vwy59sxbrcik": 0, "1xgcimigtwgialybhdhg44kh3i3is6prr": 0, "2": 0, "3": 0, "4": 0, "5": 0, "56": 0, "6": 0, "A": 0, "And": 0, "As": 0, "By": 0, "For": 0, "If": 0, "In": 0, "It": 0, "Of": 0, "One": 0, "Or": 0, "The": 0, "To": 0, "With": 0, "access": 0, "ad": 0, "add": [0, 3], "addition": 0, "after": 0, "alia": 0, "all": 0, "allow": 0, "along": 0, "also": 0, "amd": 0, "an": [0, 3], "anonym": 0, "anoth": 0, "appli": 0, "ar": 0, "argument": 0, "arrai": 0, "assign": 0, "attribut": 0, "averag": 0, "average_bedroom": 0, "avoid": 0, "axi": 0, "back": 0, "bare": 0, "becaus": 0, "bedroom": 0, "been": 0, "befor": 0, "being": 0, "below": 0, "block": [0, 4], "bone": 0, "book": 1, "both": 0, "br": 0, "built": 0, "calcul": 0, "california_housing_train": 0, "can": 0, "capit": 0, "case": 0, "cell": [0, 3], "chang": 0, "check": 0, "citat": 2, "code": [0, 4], "colab": 0, "color": 0, "column": 0, "com": 0, "common": 0, "comprehens": 0, "concept": 0, "contain": 0, "content": [0, 4], "control": 0, "conveni": 0, "convert": 0, "creat": [0, 3], "csv": 0, "custom": 0, "data": 0, "datafram": 0, "date": 0, "datetim": 0, "default": 0, "demonstr": 0, "depend": 0, "determin": 0, "df_bare_bon": 0, "df_csv": 0, "df_dict": 0, "df_excel": 0, "df_excel_new": 0, "df_excel_new_index": 0, "dictionair": 0, "dictionari": 0, "direct": [0, 2], "directori": 0, "discuss": 0, "displai": 0, "dlf4namw00llrekelsr9dxsb": 0, "doe": 0, "dot": 0, "drive": 0, "drive_link": 0, "dropbox": 0, "duplic": 0, "e": 0, "each": 0, "effect": 0, "element": 0, "enabl": 0, "end": 0, "enumer": 0, "equival": 0, "exampl": [0, 3], "excel": 0, "except": 0, "explan": 0, "fals": 0, "file": [0, 2], "first": 0, "five": 0, "fix": 0, "folder": 0, "font": 0, "from": 0, "function": 0, "g": 0, "gemini": 0, "get_index": 0, "googl": 0, "green": 0, "ha": 0, "have": 0, "help": 0, "here": 0, "household": 0, "href": 0, "http": 0, "i": [0, 2], "ident": 0, "identifi": 0, "iloc": 0, "import": 0, "improv": 0, "includ": 0, "index": 0, "initi": 0, "inplac": 0, "instal": 0, "instanc": 0, "instanti": 0, "interpret": 0, "introduct": 0, "iter": 0, "iterrow": 0, "jupyt": 1, "keep": 0, "kei": 0, "label": 0, "lambda": 0, "latitud": 0, "latitudg": 0, "learn": 2, "librari": 0, "list": 0, "littl": 0, "loc": 0, "locat": 0, "longitud": 0, "longitude_latitud": 0, "mai": 0, "make": 0, "manipul": 0, "mark": 0, "markdown": [2, 3, 4], "metadata": 3, "method": 0, "minu": 0, "modul": 0, "more": 2, "must": 0, "myst": [2, 3, 4], "name": 0, "necessari": 0, "need": 0, "negat": 0, "new": 0, "next": 0, "nice": 0, "notebook": [0, 3, 4], "number": 0, "numpi": 0, "object": 0, "occur": 0, "one": 0, "onli": 0, "oper": 0, "option": 0, "organ": 0, "other": 0, "our": 0, "out": 0, "output": 4, "over": 0, "pair": 0, "panda": 0, "path": 0, "pd": 0, "perman": 0, "plu": 0, "present": 0, "prevent": 0, "primari": 0, "print": 0, "provid": 0, "python": 0, "quickli": 3, "read_csv": 0, "refer": 0, "reminisc": 0, "replac": 0, "requir": 0, "research": 0, "respect": 0, "result": 0, "return": 0, "role": 2, "root": 0, "row": 0, "same": 0, "sampl": [0, 2], "sample_data": 0, "second": 0, "see": 0, "sens": 0, "seri": 0, "set": 0, "set_index": 0, "sever": 0, "share": 0, "sheet": 0, "sheet_nam": 0, "shorthand": 0, "show": 0, "similar": 0, "simpl": 0, "singl": 0, "slice": 0, "sole": 0, "some": 0, "specifi": 0, "spreadsheet": 0, "statement": 0, "t": 0, "tabl": 0, "ten": 0, "thi": 0, "third": 0, "those": 0, "three": 0, "through": 0, "timestamp": 0, "to_excel": 0, "to_numpi": 0, "total": 0, "track": 0, "transform": 0, "transpos": 0, "true": 0, "try": 0, "tupl": 0, "two": 0, "type": 0, "uniqu": 0, "unlik": 0, "us": 0, "usp": 0, "valu": 0, "variabl": 0, "veri": 0, "versatil": 0, "wa": 0, "want": 0, "welcom": 1, "what": 2, "wise": 0, "within": 0, "without": 0, "x": 0, "xlsx": 0, "y": 0, "yaml": 3, "you": 0, "your": [0, 1], "z": 0}})